{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchApi","FormControl","NativeSelect","dafultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b2300ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__37uqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2pRU0\",\"container\":\"CountryPicker_container__16V4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1v-bq\",\"card\":\"Cards_card__2gCPT\",\"infected\":\"Cards_infected__lCrsf\",\"recovered\":\"Cards_recovered__7nWjB\",\"deaths\":\"Cards_deaths__2WS1Z\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( {data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration=\"2.5\" separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration=\"2.5\" separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration=\"2.5\" separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const {\r\n            data: { confirmed, recovered, deaths, lastUpdate },\r\n        } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        console.log(data, 'DATA');\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {\r\n            data: { countries },\r\n        } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {}\r\n};\r\n","import React, {useState, useEffect}from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( {data: {confirmed, recovered, deaths}, country} ) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n            <Line data={{\r\n                labels: dailyData.map(( {date }) => date),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map(( {confirmed })=> confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        data: dailyData.map(( {deaths })=> deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    }\r\n                ]\r\n            }} />\r\n        ) : null\r\n    )\r\n    console.log(confirmed, recovered, deaths)\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar data={{\r\n                    labels: ['Infected','Recovered','Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'rgba(0, 0, 255, 0.5)',\r\n                                'rgba(0, 255, 0, 0.5)',\r\n                                'rgba(255, 0, 0, 0.5)'\r\n                            ], \r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        },\r\n                    ]\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`}\r\n                }}\r\n                ></Bar>\r\n            ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ( { handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries(await  fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [setFetchedCountries])\r\n    return (\r\n        <FormControl className={styles.container}>\r\n            <NativeSelect dafultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    };\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    };\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img\r\n                    className={styles.image}\r\n                    src={coronaImage}\r\n                    alt=\"COVID-19\"\r\n                />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__18yAd\",\"image\":\"App_image__oKg9Q\"};"],"sourceRoot":""}